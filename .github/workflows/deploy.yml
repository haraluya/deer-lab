name: Deploy to Firebase Hosting (Main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Verify Node.js version
      run: |
        echo "Node.js version:"
        node --version
        echo "npm version:"
        npm --version
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      run: npm run build
      
    - name: Verify build output
      run: |
        echo "Checking build output..."
        ls -la out/
        echo "Number of files in out directory:"
        find out -type f | wc -l
        echo "Checking for index.html..."
        if [ -f "out/index.html" ]; then
          echo "✅ index.html exists"
          head -5 out/index.html
        else
          echo "❌ index.html not found"
          exit 1
        fi
        echo "Checking for static directory..."
        if [ -d "out/static" ]; then
          echo "✅ static directory exists"
          ls -la out/static/
        else
          echo "❌ static directory not found"
          exit 1
        fi
        echo "✅ Build verification passed"
        
    - name: Deploy to Firebase
      if: github.ref == 'refs/heads/main'
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        channelId: live
        projectId: deer-lab
        entryPoint: '.'
