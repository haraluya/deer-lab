name: Deploy to Firebase Hosting (Main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'ÈÅ∏ÊìáÈÉ®ÁΩ≤ÁõÆÊ®ô'
        required: true
        default: 'hosting'
        type: choice
        options:
        - hosting
        - functions
        - full

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Verify Node.js version
      run: |
        echo "Node.js version:"
        node --version
        echo "npm version:"
        npm --version
        
    - name: Install root dependencies
      run: npm ci

    - name: Install functions dependencies
      run: |
        cd functions
        npm ci
      
    - name: Build Next.js project
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      run: npm run build

    - name: Copy .next to functions directory (excluding cache)
      run: |
        # Remove existing .next if it exists
        rm -rf functions/.next
        
        # Copy complete .next directory but exclude cache to reduce deployment size
        mkdir -p functions/.next
        
        # Copy essential directories
        cp -r .next/server functions/.next/ 2>/dev/null || true
        cp -r .next/static functions/.next/ 2>/dev/null || true  
        cp -r .next/types functions/.next/ 2>/dev/null || true
        cp -r .next/standalone functions/.next/ 2>/dev/null || true
        
        # Copy all critical files (JSON configs, BUILD_ID, etc.)
        find .next -maxdepth 1 -type f -name "*.json" -exec cp {} functions/.next/ \; 2>/dev/null || true
        find .next -maxdepth 1 -type f -name "*.js" -exec cp {} functions/.next/ \; 2>/dev/null || true
        cp .next/BUILD_ID functions/.next/ 2>/dev/null || true
        cp .next/package.json functions/.next/ 2>/dev/null || true
        cp .next/trace functions/.next/ 2>/dev/null || true
        cp .next/export-marker.json functions/.next/ 2>/dev/null || true
        
        # Verify critical files exist
        echo "üîç Verifying essential files:"
        test -f functions/.next/BUILD_ID && echo "‚úÖ BUILD_ID found" || echo "‚ùå BUILD_ID missing"
        test -f functions/.next/build-manifest.json && echo "‚úÖ build-manifest.json found" || echo "‚ùå build-manifest.json missing"
        test -d functions/.next/server && echo "‚úÖ server directory found" || echo "‚ùå server directory missing"
        test -d functions/.next/static && echo "‚úÖ static directory found" || echo "‚ùå static directory missing"
        
        echo "‚úÖ Next.js build copied (excluding cache, saved ~566MB)"

    - name: Build Cloud Functions
      run: |
        cd functions
        npm run build
      
    - name: Deploy to Firebase - Auto (Push)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        npm install -g firebase-tools
        firebase deploy --only hosting --project deer-lab --token "${{ secrets.FIREBASE_TOKEN }}" --non-interactive
        
    - name: Deploy to Firebase - Manual (Hosting)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_target == 'hosting'
      run: |
        npm install -g firebase-tools
        firebase deploy --only hosting --project deer-lab --token "${{ secrets.FIREBASE_TOKEN }}" --non-interactive
        
    - name: Deploy to Firebase - Manual (Functions)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_target == 'functions'
      run: |
        npm install -g firebase-tools
        firebase deploy --only functions:nextServer --project deer-lab --token "${{ secrets.FIREBASE_TOKEN }}" --non-interactive
        
    - name: Deploy to Firebase - Manual (Full)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_target == 'full'
      run: |
        npm install -g firebase-tools
        firebase deploy --project deer-lab --token "${{ secrets.FIREBASE_TOKEN }}" --non-interactive
